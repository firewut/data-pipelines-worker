{
    "slug": "YT-CHANNEL-video-generation-block-prompt",
    "title": "Youtube video generation pipeline from prompt",
    "description": "Generates videos for youtube Channel <CHANNEL>. Uses Prompt in the Block.",
    "blocks": [
        {
            "id": "openai_chat_completion",
            "slug": "get-text-content-for-video",
            "description": "Get Text Content of the Video",
            "input": {
                "system_prompt": "You must look for Historical event ( use google ) which happened today years ago. Write a short story about it. Add some interesting facts and make it engaging. The story should be around 40 words.",
                "user_prompt": "What happened today?"
            }
        },
        {
            "id": "send_to_telegram_for_moderation",
            "slug": "send-text-for-moderation",
            "description": "Send Text for Moderation",
            "input_config": {
                "property": {
                    "message": {
                        "origin": "get-text-content-for-video",
                        "jsonPath": "$"
                    }
                }
            },
            "input": {
                "to": "@firecrab",
                "bot_id": "yt-[channel-ABC]-moderation",
                "moderation_suffix": "yt-[channel-ABC]-text-moderation"
            }
        },
        {
            "id": "fetch-text-moderation-decision",
            "slug": "fetch-text-moderation-decision",
            "description": "Fetch Modration Decision from Telegram",
            "input_config": {
                "property": {
                    "decision": {
                        "origin": "send-text-for-moderation"
                    }
                }
            },
            "input": {
                "bot_id": "yt-channel-moderation",
                "moderation_suffix": "yt-[channel-ABC]-text-moderation"
            }
        },
        {
            "id": "stop_pipeline",
            "slug": "stop-pipeline-if-text-moderation-declined",
            "description": "Stop Pipeline if Moderation Declined",
            "input_config": {
                "property": {
                    "condition": {
                        "origin": "fetch-text-moderation-decision",
                        "jsonPath": "action='declined'"
                    }
                }
            }
        },
        {
            "id": "openai_tts_request",
            "slug": "request-tts-from-openai",
            "description": "Request TTS from OpenAI",
            "input_config": {
                "property": {
                    "text": {
                        "origin": "get-text-content-for-video",
                        "jsonPath": "choices[0].message"
                    }
                }
            }
        },
        {
            "id": "http_request",
            "slug": "request-tts-transcription",
            "description": "Request TTS Transcription",
            "input_config": {
                "property": {
                    "body": {
                        "origin": "request-tts-from-openai",
                        "type": "file"
                    }
                }
            },
            "input": {
                "url": "https://openai.com/api/v2/transcription",
                "method": "POST",
                "headers": {
                    "Authorisation: Bearer": "OPENAI_TOKEN"
                }
            }
        },
        {
            "id": "http_request",
            "slug": "request-image-for-tts-segment",
            "description": "Request an Image for Text in Transcription Segment",
            "input_config": {
                "type": "array",
                "parallel": false,                        
                "property": {
                    "body": {
                        "origin": "request-tts-transcription",
                        "jsonPath": "//segments"
                    }
                }
            },
            "input": {
                "url": "https://openai.com/api/v2/image-generation",
                "method": "POST",
                "headers": {
                    "Authorisation: Bearer": "OPENAI_TOKEN"
                },
                "query": "model=dall-e"
            },
            "output_config": {
                "type": "array"
            }
        },
        {
            "id": "http_request",
            "slug": "download-image",
            "description": "Download image from URLs",
            "input_config": {
                "type": "array",
                "parallel": true,
                "property": {
                    "url": {
                        "origin": "request-image-for-tts-segment",
                        "jsonPath": "//url"
                    }
                }
            },
            "input": {
                "method": "GET"
            },
            "output_config": {
                "type": "array"
            }
        },
        {
            "id": "image_add_text",
            "slug": "add-transcription-text-to-image",
            "description": "Add Transcription Text to Image",
            "input_config": {
                "type": "array",
                "parallel": true,
                "property": {
                    "text": {
                        "origin": "request-image-for-tts-segment",
                        "jsonPath": "//segments"
                    },
                    "image": {
                        "origin": "download-image"
                    }
                }
            },
            "input": {
            },
            "output_config": {
                "type": "array"
            }
        },
        {
            "id": "generate_video_from_image",
            "slug": "generate-video-from-images-and-transcriptions",
            "description": "Generate video from Images and Transcription Segments",
            "input_config": {
                "type": "array", 
                "parallel": false,
                "property": {
                    "start": {
                        "origin": "request-tts-transcription",
                        "jsonPath": "//segments[$INDEX]/start"
                    },
                    "end": {
                        "origin": "request-tts-transcription",
                        "jsonPath": "//segments[$INDEX]/end"
                    },
                    "image": {
                        "origin": "add-transcription-text-to-image"
                    }
                }
            }
        },
        {
            "id": "add_audio_to_video",
            "slug": "add-audio-to-video",
            "description": "Add Generated TTS to Video",
            "input_config": {
                "property": {
                    "audio": {
                        "origin": "request-tts-from-openai"
                    },
                    "video": {
                        "origin": "generate-video-from-images-and-transcriptions"
                    }
                }
            },
            "input": {
                "video": "s3://....",
                "audio": "s3://...."
            }
        },
        {
            "id": "send_video_to_telegram_for_moderation",
            "slug": "send-video-for-moderation",
            "description": "Send Video for Moderation",
            "input_config": {
                "property": {
                    "media": {
                        "origin": "add-audio-to-video"
                    }
                }
            },
            "input": {
                "to": "@firecrab",
                "bot_id": "yt-[channel-ABC]-moderation",
                "moderation_suffix": "yt-[channel-ABC]-video-moderation"
            }
        },
        {
            "id": "fetch_moderation_from_telegram",
            "slug": "fetch-video-moderation-decision",
            "description": "Fetch Video Modration Decision from Telegram",
            "input_config": {
                "property": {
                    "decision": {
                        "origin": "send-video-for-moderation"
                    }
                }
            },
            "input": {
                "bot_id": "yt-channel-moderation",
                "moderation_suffix": "yt-[channel-ABC]-video-moderation"
            }
        },
        {
            "id": "stop_pipeline",
            "slug": "stop-pipeline-if-video-moderation-declined",
            "description": "Stop Pipeline if Video Moderation Declined",
            "input_config": {
                "property": {
                    "condition": {
                        "origin": "fetch-video-moderation-decision",
                        "jsonPath": "action='declined'"
                    }
                }
            }
        },
        {
            "id": "openai_request",
            "slug": "request-title-from-openai", 
            "description": "Request Title for the Text from OpenAI",
            "input_config": {
                "property": {
                    "user_request": {
                        "origin": "get-text-content-for-video",
                        "jsonPath": "choices[0].message"
                    }
                }
            },
            "input": {
                "url": "https://openai.com/api/v2/tts",
                "method": "POST",
                "headers": {
                    "Content-Type": "application/json",
                    "Authorisation: Bearer": "OPENAI_TOKEN"
                },
                "prompt": "Get title for this text. The title should contain three words that summarize the text. It should be three words long."
            }
        },
        {
            "id": "openai_request",
            "slug": "request-description-from-openai", 
            "description": "Request Description for the Text from OpenAI",
            "input_config": {
                "property": {
                    "user_request": {
                        "origin": "get-text-content-for-video",
                        "jsonPath": "choices[0].message"
                    }
                }
            },
            "input": {
                "url": "https://openai.com/api/v2/tts",
                "method": "POST",
                "headers": {
                    "Content-Type": "application/json",
                    "Authorisation: Bearer": "OPENAI_TOKEN"
                },
                "prompt": "Get short summary for text text. It should be around 3 or 4 words long. It should be informative and engaging. Exclude following words: {exclude_words}"
            }
        },
        {
            "id": "openai_request",
            "slug": "request-tags-from-openai", 
            "description": "Request Tags for the Text from OpenAI",
            "input_config": {
                "property": {
                    "user_request": {
                        "origin": "get-text-content-for-video",
                        "jsonPath": "choices[0].message"
                    }
                },
                "format_vars": {
                    "exclude_tags": {
                        "origin": "",
                        "jsonPath": ""
                    }
                }
            },
            "input": {
                "url": "https://openai.com/api/v2/tts",
                "method": "POST",
                "headers": {
                    "Content-Type": "application/json",
                    "Authorisation: Bearer": "OPENAI_TOKEN"
                },
                "prompt": "Get list of tags for text. This list should contain 3 words maximum. Each tag should be one word long. Country names, historical events, and general terms are good tags. Separate tags by Space and do not use anything by characters and numbers. Exclude following words: {exclude_tags}"
            }
        },
        {
            "id": "upload_video_to_youtube",
            "slug": "upload-video-to-youtube",
            "description": "Upload approved video to Youtube",
            "input_config": {
                "property": {
                    "video": {
                        "origin": "add-audio-to-video"
                    },
                    "snippet__title": {
                        "origin": "request-title-from-openai"
                    },
                    "snippet__description": {
                        "origin": "request-description-from-openai"
                    },
                    "snippet__tags": {
                        "origin": "request-tags-from-openai"
                    }
                }
            },
            "input": {
                "credentials_file": "channel-secrets.json",
                "channel_id": "hardcoded channel id",
                "snippet__channel_title": "Generated videos Channel",
                "snippet__category_id": 22,
                "snippet__default_language": "en",
                "status__privacy_status": "private",
                "status__made_for_kids": false
            }
        }
    ]
 }